name: Backend CI â€” Test, Build and Push to ACR

on:
  push:
    branches:
      - testing

env:
  ACR_LOGIN_SERVER: ${{ secrets.ACR_LOGIN_SERVER }}
  IMAGE_TAG: ${{ github.sha }}

jobs:
  test-build-push:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=10

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libpq-dev postgresql-client

      - name: Wait for Postgres and create service databases
        env:
          PGPASSWORD: postgres
        run: |
          for i in {1..30}; do
            if pg_isready -h 127.0.0.1 -p 5432 -U postgres; then
              echo "Postgres is ready"; break
            fi
            echo "Waiting for Postgres ($i/30)..."; sleep 2
          done
          psql -h 127.0.0.1 -U postgres -c "CREATE DATABASE customers;"
          psql -h 127.0.0.1 -U postgres -c "CREATE DATABASE products;"
          psql -h 127.0.0.1 -U postgres -c "CREATE DATABASE orders;"

      # ---- Run tests ----
      - name: Test customer_service
        working-directory: backend/customer_service
        run: |
          pip install -r requirements-dev.txt
          pytest -q

      - name: Test product_service
        working-directory: backend/product_service
        run: |
          pip install -r requirements-dev.txt
          pytest -q

      - name: Test order_service
        working-directory: backend/order_service
        run: |
          pip install -r requirements-dev.txt
          pytest -q

      # ---- Build and push Docker images ----
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: ACR login
        run: az acr login --name $ACR_LOGIN_SERVER

      - name: Build & push Docker images
        run: |
          docker build -t $ACR_LOGIN_SERVER/customer_service:${IMAGE_TAG} ./backend/customer_service
          docker push $ACR_LOGIN_SERVER/customer_service:${IMAGE_TAG}

          docker build -t $ACR_LOGIN_SERVER/product_service:${IMAGE_TAG} ./backend/product_service
          docker push $ACR_LOGIN_SERVER/product_service:${IMAGE_TAG}

          docker build -t $ACR_LOGIN_SERVER/order_service:${IMAGE_TAG} ./backend/order_service
          docker push $ACR_LOGIN_SERVER/order_service:${IMAGE_TAG}

          docker build -t $ACR_LOGIN_SERVER/frontend:${IMAGE_TAG} ./frontend
          docker push $ACR_LOGIN_SERVER/frontend:${IMAGE_TAG}
